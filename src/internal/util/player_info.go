package util

import (
	"fmt"
	"slices"
	"strings"

	"github.com/id10110011/dota2bot/src/internal/constants"
	"github.com/id10110011/dota2bot/src/internal/model"
)

func BuildInfoOfPlayer(match *model.Match, playerId int) string {
	sb := strings.Builder{}

	idx := slices.IndexFunc(match.Players, func(player model.Player) bool { return player.AccountID == playerId })

	if idx != -1 {
		player := match.Players[idx]
		sb.WriteString("–î–∞–Ω–µ–∫ —Å–µ–π—á–∞—Å —Å—ã–≥—Ä–∞–ª –∏–≥—Ä—É –≤ –¥–æ—Ç–∫—É –Ω–∞ " + constants.Heroes[player.HeroID] + " –ø–æ–¥ –Ω–∏–∫–æ–º: " + player.PersonaName + "\n")
		if player.Win == 1 {
			sb.WriteString("–ü—Ä–æ–≤–µ–∑–ª–∏ —Ä—É–∏–Ω—É –Ω–∞ –ø–æ–±–µ–¥—É\n")
		} else {
			sb.WriteString("–ë–µ–∑–¥–∞—Ä–Ω–æ –ø—Ä–æ–∏–≥—Ä–∞–ª\n")
		}

		sb.WriteString("–°—Ç–∞—Ç–∞ –≤ –∫–∞—Ç–∫–µ:\n")
		sb.WriteString(fmt.Sprintf("%s%d%s\n%s%d-%d-%d\n%s%düëæ\n%s%düî∂\n",
			"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–≥—Ä—ã: ", player.Duration/60, " –º–∏–Ω.",
			"KDA: ", player.Kills, player.Deaths, player.Assists,
			"–ö—Ä–∏–ø–æ—á–∫–∏: ", player.LastHits,
			"GPM: ", player.GoldPerMin))

	}

	return sb.String()
}
